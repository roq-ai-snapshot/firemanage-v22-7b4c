generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model emergency_response_plan {
  id                 String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name               String          @db.VarChar(255)
  description        String?         @db.VarChar(255)
  fire_department_id String          @db.Uuid
  created_at         DateTime        @default(now()) @db.Timestamp(6)
  updated_at         DateTime        @default(now()) @db.Timestamp(6)
  fire_department    fire_department @relation(fields: [fire_department_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model fire_department {
  id                      String                    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                    String                    @db.VarChar(255)
  description             String?                   @db.VarChar(255)
  image                   String?                   @db.VarChar(255)
  created_at              DateTime                  @default(now()) @db.Timestamp(6)
  updated_at              DateTime                  @default(now()) @db.Timestamp(6)
  user_id                 String                    @db.Uuid
  tenant_id               String                    @db.VarChar(255)
  emergency_response_plan emergency_response_plan[]
  user                    user                      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  incident_report         incident_report[]
  resource                resource[]
  training_program        training_program[]
}

model incident_report {
  id                 String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title              String          @db.VarChar(255)
  description        String?         @db.VarChar(255)
  status             String          @db.VarChar(255)
  fire_department_id String          @db.Uuid
  created_at         DateTime        @default(now()) @db.Timestamp(6)
  updated_at         DateTime        @default(now()) @db.Timestamp(6)
  fire_department    fire_department @relation(fields: [fire_department_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model resource {
  id                 String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name               String          @db.VarChar(255)
  type               String          @db.VarChar(255)
  status             String          @db.VarChar(255)
  fire_department_id String          @db.Uuid
  created_at         DateTime        @default(now()) @db.Timestamp(6)
  updated_at         DateTime        @default(now()) @db.Timestamp(6)
  fire_department    fire_department @relation(fields: [fire_department_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model training_program {
  id                    String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                  String                  @db.VarChar(255)
  description           String?                 @db.VarChar(255)
  fire_department_id    String                  @db.Uuid
  created_at            DateTime                @default(now()) @db.Timestamp(6)
  updated_at            DateTime                @default(now()) @db.Timestamp(6)
  fire_department       fire_department         @relation(fields: [fire_department_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_training_program user_training_program[]
}

model user {
  id                    String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                 String                  @unique @db.VarChar(255)
  firstName             String?                 @db.VarChar(255)
  lastName              String?                 @db.VarChar(255)
  roq_user_id           String                  @db.VarChar(255)
  tenant_id             String                  @db.VarChar(255)
  created_at            DateTime                @default(now()) @db.Timestamp(6)
  updated_at            DateTime                @default(now()) @db.Timestamp(6)
  fire_department       fire_department[]
  user_training_program user_training_program[]
}

model user_training_program {
  id                  String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id             String           @db.Uuid
  training_program_id String           @db.Uuid
  status              String           @db.VarChar(255)
  created_at          DateTime         @default(now()) @db.Timestamp(6)
  updated_at          DateTime         @default(now()) @db.Timestamp(6)
  training_program    training_program @relation(fields: [training_program_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                user             @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
